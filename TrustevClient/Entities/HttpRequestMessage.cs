
// Generated by ApiCrawler

using System;
using Trustev.Api.Client.Entities;
using Newtonsoft.Json;

namespace Trustev.Api.Client.Entities {

		
	/// <summary>
	/// 
	/// </summary>
	public class HttpRequestMessage {

		#region Public properties

				
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Version Version;
		
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public HttpContent Content;
		
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public HttpMethod Method;
		
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public System.Uri RequestUri;
		
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public Object[] Headers;
		
		/// <summary>

		/// </summary>
		[JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
		public System.Collections.Generic.Dictionary<object, object> Properties;

		
		#endregion
		
		#region Constructor

		/// <summary>
		/// 
		/// </summary>
		/// <param name="jsonObject">JSON string defines object</param>
		public HttpRequestMessage(string jsonObject = null) {
		if(jsonObject!=null) {
				var desObj = JsonConvert.DeserializeObject<HttpRequestMessage>(jsonObject);
				this.Version = desObj.Version;
				this.Content = desObj.Content;
				this.Method = desObj.Method;
				this.RequestUri = desObj.RequestUri;
				this.Headers = desObj.Headers;
				this.Properties = desObj.Properties;
			}
		}

		#endregion
	}
}

